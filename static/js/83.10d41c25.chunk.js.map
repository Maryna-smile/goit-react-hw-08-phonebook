{"version":3,"file":"static/js/83.10d41c25.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  // flex-direction: column;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const Button = styled.button`\nmargin-top: 10px;\n  align-items: center;\n  align-self: center;\n  background-color: rgb(116, 1, 81);\n  background-image: none;\n  background-position: 0 90%;\n  background-repeat: repeat no-repeat;\n  background-size: 4px 3px;\n  border-radius: 15px 225px 255px 15px 15px 255px 225px 15px;\n  border-style: solid;\n  border-width: 2px;\n  box-shadow: rgba(0, 0, 0, 0.2) 15px 28px 25px -18px;\n  box-sizing: border-box;\n  color: #f3eff2;\n  cursor: pointer;\n  display: inline-block;\n  font-family: Neucha, sans-serif;\n  font-size: 1rem;\n  line-height: 23px;\n  outline: none;\n  padding: 5px 10px;\n  text-decoration: none;\n  transition: all 235ms ease-in-out;\n  border-bottom-left-radius: 15px 255px;\n  border-bottom-right-radius: 225px 15px;\n  border-top-left-radius: 255px 15px;\n  border-top-right-radius: 15px 225px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  &:hover {\n    box-shadow: rgba(0, 0, 0, 0.3) 2px 8px 8px -5px;\n    transform: translate3d(0, 2px, 0);\n  }\n\n  &focus {\n    box-shadow: rgba(0, 0, 0, 0.3) 2px 8px 4px -6px;\n  }\n`;\n","import { TextField } from '@mui/material';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\nimport { Button, Form } from './ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n\n  const handleInputNameChange = e => {\n    setName(e.target.value);\n  };\n  const handleInputNumberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleAddButtonClick = e => {\n    e.preventDefault();\n    const newContact = {\n      name,\n      number,\n    };\n\n    if (contacts.some(el => el.name === name)) {\n      toast('This contact already exists');\n      setName('');\n      setNumber('');\n      return;\n    }\n    dispatch(addContact(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleAddButtonClick}>\n        <ToastContainer />\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          placeholder=\"enter contact`s number\"\n          name=\"name\"\n          onChange={handleInputNameChange}\n          value={name}\n          sx={{\n            mt: '1rem',\n          }}\n          type=\"text\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Number\"\n          variant=\"outlined\"\n          placeholder=\"enter contact`s name\"\n          name=\"number\"\n          onChange={handleInputNumberChange}\n          value={number}\n          sx={{\n            mt: '1rem',\n          }}\n          type=\"tel\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n        <Button onClick={handleAddButtonClick}>Add contact</Button>\n      </Form>\n    </>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Caption= styled.p`\nmargin-top: 40px;\npadding: 0;\nfont-size: 20px;\ntext-align: center;\n`\n\nexport const Container= styled.div`\nmargin: 0 auto;\n`","import { TextField } from '@mui/material';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilterValue } from 'redux/filterSlise/filterSlice';\nimport { selectFilter } from 'redux/selectors';\nimport { Caption, Container } from './Filter.styled';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFilterInput = e => {\n    dispatch(getFilterValue(e.target.value));\n    console.log(e.target.value)\n  };\n\n  return (\n    <Container>\n      <Caption>Find contacts by name</Caption>\n\n      <TextField\n        onChange={handleFilterInput}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={filter}\n        id=\"outlined-basic\"\n        variant=\"outlined\"\n        placeholder=\"enter contact`s name\"\n        name=\"name\"\n        sx={{\n          mt: '1rem',\n          // m: '0 auto'\n        }}\n      />\n    </Container>\n  );\n}\n\n\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\nmargin-top: 10px;\n  align-items: center;\n  align-self: center;\n  background-color: rgb(116, 1, 81);\n  background-image: none;\n  background-position: 0 90%;\n  background-repeat: repeat no-repeat;\n  background-size: 4px 3px;\n  border-radius: 15px 225px 255px 15px 15px 255px 225px 15px;\n  border-style: solid;\n  border-width: 2px;\n  box-shadow: rgba(0, 0, 0, 0.2) 15px 28px 25px -18px;\n  box-sizing: border-box;\n  color: #f3eff2;\n  cursor: pointer;\n  display: inline-block;\n  font-family: Neucha, sans-serif;\n  font-size: 1rem;\n  line-height: 23px;\n  outline: none;\n  padding: 5px 10px;\n  text-decoration: none;\n  transition: all 235ms ease-in-out;\n  border-bottom-left-radius: 15px 255px;\n  border-bottom-right-radius: 225px 15px;\n  border-top-left-radius: 255px 15px;\n  border-top-right-radius: 15px 225px;\n  user-select: none;\n  -webkit-user-select: none;\n  touch-action: manipulation;\n  &:hover {\n    box-shadow: rgba(0, 0, 0, 0.3) 2px 8px 8px -5px;\n    transform: translate3d(0, 2px, 0);\n  }\n\n  &focus {\n    box-shadow: rgba(0, 0, 0, 0.3) 2px 8px 4px -6px;\n  }\n`\n\nexport const List= styled.ul`\nmargin: 20px 0;\npadding: 0;\n`\n\nexport const Item = styled.li`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nfont-size: 20px;\n`","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from '../../redux/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button, Item, List } from './ContactList.styled';\n\nexport default function ContactList() {\n  const contacts = useSelector(selectContacts);\n\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const filteredContacts = contacts.filter(el =>\n    el.name.toLowerCase().trim().includes(filter.toLowerCase().trim())\n  );\n\n  const handleRemove = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            {name}: {number}\n            <Button type=\"button\" onClick={() => handleRemove(id)}>\n              Delete\n            </Button>\n          </Item>\n        );\n      })}\n    </List>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: space-between;\nalign-items: center;\nfont-size: 20px;\n`\n\nexport const Caption = styled.h2`\ntext-align: center;\nfont-size: 20px;\n`\n","import React, { useEffect } from 'react';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectError, selectIsLoading } from 'redux/selectors';\nimport { Caption, Container } from './ContactsPage.styled';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <><Container>\n      <div>\n      <Caption>Phonebook contacts</Caption>\n      {isLoading && !error && <h2>Request in progress ...</h2>}\n      <ContactForm />\n      </div>\n      <div>\n      {contacts.length > 0 && <Filter />}\n      <ContactList />\n      </div>\n      </Container>\n      \n    </>\n  );\n}\n"],"names":["Form","styled","Button","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","handleAddButtonClick","e","preventDefault","newContact","some","el","toast","addContact","onSubmit","TextField","id","label","variant","placeholder","onChange","target","value","sx","mt","type","pattern","title","required","onClick","Caption","Container","Filter","filter","selectFilter","getFilterValue","console","log","List","Item","ContactList","filteredContacts","toLowerCase","trim","includes","map","deleteContact","handleRemove","ContactsPage","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","length"],"sourceRoot":""}